FUNCTION "FC_SafetyStandard" : Void
{ S7_Optimized_Access := 'TRUE' ; Published := 'TRUE' }
VERSION : 0.1

BEGIN
	// ==========================================================================================================================================
	// Company        : LogTech, s.r.o.
	// Created by     : Mahmoud Elnady
	// Block          : FC_SafetyStandard
	// Project        : Lékárna Chrudim
	// Project number : 23-157
	// ==========================================================================================================================================
	
	REGION safety to standard: - without delay
	    
	    // All zone estop status
	    "DB_SafetyStandard".ToStandard.EstopActive :=
	    
	    NOT "FSIDB_Main_Safety_RTG1".Pair1.Q OR 
	    NOT "FSIDB_Main_Safety_RTG1".Pair2.Q OR
	    NOT "FSIDB_Main_Safety_RTG1".Pair3.Q OR
	    NOT "FSIDB_Main_Safety_RTG1".Pair4.Q OR
	    NOT "FSIDB_Main_Safety_RTG1".Pair5.Q OR
	    NOT "FSIDB_Main_Safety_RTG1".Pair6.Q;
	    
	END_REGION
	
	REGION Press Reset
	    
	    // reset needed / Ack. Req. 
	    // can be reseted when zone estop status is active and zone estop is released
	    
	    "DB_SafetyStandard".PressReset :=
	    "FSIDB_Main_Safety_RTG1".Pair1.ACK_REQ OR
	    "FSIDB_Main_Safety_RTG1".Pair2.ACK_REQ OR
	    "FSIDB_Main_Safety_RTG1".Pair3.ACK_REQ OR
	    "FSIDB_Main_Safety_RTG1".Pair4.ACK_REQ OR
	    "FSIDB_Main_Safety_RTG1".Pair5.ACK_REQ OR
	    "FSIDB_Main_Safety_RTG1".Pair6.ACK_REQ;
	    
	END_REGION
	
	REGION Hold alarm Off
	    
	    // hold alarm message OFF
	    IF "DB_SafetyStandard".ToStandard.EstopActive
	    THEN
	        "DB_SafetyStandard".holdAlarmOff := TRUE;
	    END_IF;
	    
	    // release hold after preset time
	    
	    "DB_SafetyStandard".holdAlarmOffTimer(IN := NOT "DB_SafetyStandard".ToStandard.EstopActive,
	                                          PT := t#15s);
	    
	    IF "DB_SafetyStandard".holdAlarmOffTimer.Q THEN
	        "DB_SafetyStandard".holdAlarmOff := FALSE;
	    END_IF;
	    
	END_REGION
	
	REGION to HMI
	    //Main
	    "DB_SafetyStandard".ToHMI."EstopPB -MCC001+SF1" := NOT "MCC001-SF1";
	    "DB_SafetyStandard".ToHMI."PhaseOK -MCC001" := NOT "MCC001+Phase Sequence Ok";
	    //Zone 1
	    "DB_SafetyStandard".ToHMI."ZONA1+A1.1.1-SF01" := NOT "ZONA1+A1.1.1-SF01";
	    "DB_SafetyStandard".ToHMI."ZONA1+A1.1.10-SF01" := NOT "ZONA1+A1.1.10-SF01";
	    "DB_SafetyStandard".ToHMI."ZONA1+A1.2.1-SF01" := NOT "ZONA1+A1.2.1-SF01";
	    "DB_SafetyStandard".ToHMI."ZONA1+C1.2.2-SF01" := NOT "ZONA1+C1.2.2-SF01";
	    "DB_SafetyStandard".ToHMI."ZONA1+B0.2.0-SF01" := NOT "ZONA1+B0.2.0-SF01";
	    "DB_SafetyStandard".ToHMI."ZONA1+B1.15.1-SF01" := NOT "ZONA1+B1.15.1-SF01";
	    "DB_SafetyStandard".ToHMI."ZONA1+E1.1.1-SF01" := NOT "ZONA1+E1.1.1-SF01";
	    
	    //Zone 2
	    "DB_SafetyStandard".ToHMI."ZONA2+D1.11.1-SF01" := NOT "ZONA2+D1.11.1-SF01";
	    "DB_SafetyStandard".ToHMI."ZONA2+A1.10.3-SF01" := NOT "ZONA2+A1.10.3-SF01";
	    "DB_SafetyStandard".ToHMI."ZONA2+A1.12.1-SF01" := NOT "ZONA2+A1.12.1-SF01";
	    "DB_SafetyStandard".ToHMI."ZONA2+A1.14.7-SF01" := NOT "ZONA2+A1.14.7-SF01";
	    "DB_SafetyStandard".ToHMI."ZONA2+A1.15.0-SF01" := NOT "ZONA2+A1.15.0-SF01";
	    "DB_SafetyStandard".ToHMI."ZONA2+A2.3.0-SF01" := NOT "ZONA2+A2.3.0-SF01";
	    "DB_SafetyStandard".ToHMI."ZONA2+A2.2.7-SF01" := NOT "ZONA2+A2.2.7-SF01";
	    "DB_SafetyStandard".ToHMI."ZONA2+A2.1.1-SF01" := NOT "ZONA2+A2.1.1-SF01";
	    "DB_SafetyStandard".ToHMI."ZONA2+G1.5.1-SF01" := NOT "ZONA2+G1.5.1-SF01";
	    "DB_SafetyStandard".ToHMI."ZONA2+G1.7.4-SF01" := NOT "ZONA2+G1.7.4-SF01";
	    
	END_REGION
	
	
	
	
	
END_FUNCTION

